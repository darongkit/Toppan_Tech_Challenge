This API is:
1. build on Flask,
2. Database: MySql Workbench

Files: 
README - readme.txt
dependencies - requirements.txt
API - application.py
localhost to view output index.html
sample data - insert_data.py
API requests - postman_api_requests
localhost webpage - index.html


Set Up steps:
Ensure all dependencies from requirements.txt is installed using pip or pip3

Set up ur api virtual environment (on powershell):
    navigate to directory of your choice
    python -m virtualenv venv (pip install virtualenv if error
    pip install flask
    pip install flask-sqlalchemy

Set up and Run MySql Workbench
    create Database: University
    username: root
    password: root
    execute insert_data.py to load sample data
    (sample dat generated using ChatGPT)

Once Database is running, venv is activated.
    $env:FLASK_ENV = "development"
    $env:FLASK_APP =  "application.py"
    Flask run to run the API.

Postman was used to test the api response.
    refer to the postman_api_requests json file for reference.
        if prompted "Unauthorized Access", go to 'authrization' tab and input username and password
        users, password: daryl-123456, admin-admin
    To use the json file: 
        Import file into your postman software.
        If not installed, install postman from official website.

**note**
HTML Webpage
shows list of bookmarked universities, followed by list of all universities.
**buttons do not work, have to input page filter in URL to go next page. 
    insert as follows:
        http://127.0.0.1:5000/universities?page=1
        http://127.0.0.1:5000/universities?page=2
        ...

Completed Task:
Challenge 1
Challenge 2
GET/university API - return bookmarked universities in beginning of list.
Basic Username and Password Authentication
Some Unit testing in postman scripts (generated by PostBot, checked by myself)
